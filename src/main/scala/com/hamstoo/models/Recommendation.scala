/*
 * Copyright (C) 2017-2018 Hamstoo, Inc. <https://www.hamstoo.com>
 */
package com.hamstoo.models

import java.util.UUID

import com.github.dwickern.macros.NameOf.nameOf
import com.hamstoo.utils.{TIME_NOW, TimeStamp}
import reactivemongo.bson.{BSONDocumentHandler, Macros}

/**
  * We store user's recommendations in a mongoDB collection
  * @param userId - user's UUID
  * @param source - One of the values from RecSourceEnum (as a String).
  * @param params - detailed about what generated the recommendation(i.e. recent autogenerated keywords)
  * @param url - a URI where the recommendation is hosted
  * @param ts - the date when the recommendation was saved
  */
case class Recommendation(userId: UUID,
                          source: String,
                          params: Map[String, String],
                          url: String,
                          ts: TimeStamp = TIME_NOW)

object Recommendation extends BSONHandlers {

  val USR      : String =      Mark.USR;        assert(USR       == nameOf[Recommendation](_.userId))
  val TIMESTAMP: String = UserStats.TIMESTAMP;  assert(TIMESTAMP == nameOf[Recommendation](_.ts))

  /**
    * Enumeration of various sources of recommendations.
    * See Representation.VecEnum for something similar.
    *
    * TODO 266: if we're comparing request URLs against these values in mediumPostsToRecommendation, then we may
    *           need to use Value("DuckDuckGo") but that should really be made more obvious via a defined function
    *
    * (Elias note): I don't think data-model should keep track of the sources. That's repr-engine job to store this
    * field properly so I would say this should be moved to repr-engine. Fred to weigh on this.
    */
  object SrcEnum extends Enumeration {
    val DUCK_DUCK_GO,
        MEDIUM
      = Value
  }

  implicit val recommendationHandler: BSONDocumentHandler[Recommendation] = Macros.handler[Recommendation]
}